---
description: OperatorKernelO6 — Core Rules (Prime Directive, Search-First, Enforcement)
globs:
  - "**/*.lean"
alwaysApply: true
---

# Search-First Development (MANDATORY)

**Path priority (search in this order):**
1. `core_docs/ko6_guide.md` — **SSOT**
2. `OperatorKernelO6/**.lean`
3. Stubs: `core_docs/agent.md`, `core_docs/ordinal-toolkit.md` (pointers only)

**Protocol (before suggesting ANY identifier/tactic/lemma):**
- Run a search (ripgrep / #search / #leansearch) over (1)–(2).
- Then echo one of:
  - `Found N matches (SSOT/code).`
  - `0 results — using GREEN-CHANNEL.`
- If ≥1 hit → use the identifier exactly as found.
- If 0 hits → propose a **GREEN-CHANNEL** stub:

```lean
/-- GREEN-CHANNEL: new helper for [one-line rationale] --/
lemma <choose_a_name> : _ := by
  "FULL PROOF RIGHT THERE" -- No single-line stubs

Enforcement Gates (don’t skip):

Never invent lemma names; verify first and copy exact spelling/qualification.

No axioms, no admit, no partial stubs left behind.

Save ⇒ lake build ⇒ fix only the lines that error until Problems panel is clean.

Build-and-Fix Loop:

Save file → lake build.

If error: run PHASE 1/2/3:

Phase 1 SCAN: list ordinal ops around the error.

Phase 2 CHECK: show where each lemma name was found or 0 results — GREEN-CHANNEL.

Phase 3 COPY: name the template proof you’re copying.

Apply smallest change; rebuild; repeat.

Why SSOT?
All canonical rules, imports, and ordinal usage live in core_docs/ko6_guide.md. Treat it as law.

