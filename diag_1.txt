Termination.lean:866:59
Tactic state
1 goal
b s n : Trace
A : Ordinal.{u_1} := ω ^ (mu n.delta + mu s + 6)
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ω ^ (mu n + mu s + 6)
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ω * (mu b + 1) + 2
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
hμ : mu n < mu n.delta
this : mu s + 6 + mu n < mu s + 6 + mu n.delta
h✝ : mu n < mu n.delta
⊢ mu n + (mu s + 6) < mu n.delta + (mu s + 6)
Expected type
b s n : Trace
A : Ordinal.{u_1} := ⋯
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ⋯
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ⋯
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
hμ : mu n < mu n.delta
this : mu s + 6 + mu n < mu s + 6 + mu n.delta
⊢ mu s + 6 + mu n < mu s + 6 + mu n.delta
Messages (4)
Termination.lean:866:6
type mismatch, term
  this
after simplification has type
  mu n < mu n.delta : Prop
but is expected to have type
  mu n + (mu s + 6) < mu n.delta + (mu s + 6) : Prop
Termination.lean:866:6
[Meta.Tactic.simp.rewrite] add_assoc:1000:
      mu n + mu s + 6
    ==>
      mu n + (mu s + 6) 
[Meta.Tactic.simp.rewrite] add_assoc:1000:
      mu n.delta + mu s + 6
    ==>
      mu n.delta + (mu s + 6) 
[Meta.Tactic.simp.rewrite] gt_iff_lt:1000:
      mu n + (mu s + 6) < mu n.delta + (mu s + 6)
    ==>
      mu n + (mu s + 6) < mu n.delta + (mu s + 6) 
[Meta.Tactic.simp.rewrite] add_assoc:1000:
      mu s + 6 + mu n
    ==>
      mu s + (6 + mu n) 
[Meta.Tactic.simp.rewrite] add_assoc:1000:
      mu s + 6 + mu n.delta
    ==>
      mu s + (6 + mu n.delta) 
[Meta.Tactic.simp.rewrite] add_lt_add_iff_left:1000:
      mu s + (6 + mu n) < mu s + (6 + mu n.delta)
    ==>
      6 + mu n < 6 + mu n.delta 
[Meta.Tactic.simp.rewrite] add_lt_add_iff_left:1000:
      6 + mu n < 6 + mu n.delta
    ==>
      mu n < mu n.delta 
Termination.lean:832:0
[diag] Diagnostics ▼
  [kernel] unfolded declarations (max: 185, num: 5): ▶
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters
Termination.lean:832:0
[diag] Diagnostics ▼
  [reduction] unfolded declarations (max: 2725, num: 24): ▶
  [reduction] unfolded instances (max: 5278, num: 55): ▶
  [reduction] unfolded reducible declarations (max: 2883, num: 10): ▶
  [type_class] used instances (max: 237, num: 2): ▶
  [def_eq] heuristic for solving `f a =?= f b` (max: 632, num: 6): ▶
  [kernel] unfolded declarations (max: 185, num: 5): ▶
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters

Termination.lean:878:57
Tactic state
1 goal
case pos
b s n : Trace
A : Ordinal.{u_1} := ω ^ (mu n.delta + mu s + 6)
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ω ^ (mu n + mu s + 6)
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ω * (mu b + 1) + 2
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
htower_lt : tower < A
hfin : mu b < ω
this : mu b + 1 < ω
⊢ rest < ω ^ 2
Expected type
b s n : Trace
A : Ordinal.{u_1} := ⋯
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ⋯
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ⋯
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
htower_lt : tower < A
hfin : mu b < ω
⊢ Ordinal.{?u.43181}
Messages (3)
Termination.lean:878:34
failed to synthesize
  AddRightStrictMono Ordinal.{?u.43181}
Termination.lean:832:0
[diag] Diagnostics ▼
  [kernel] unfolded declarations (max: 185, num: 5): ▼
    [] Quotient.lift ↦ 185 
    [] Add.add ↦ 135 
    [] HAdd.hAdd ↦ 135 
    [] Quotient.liftOn₂ ↦ 115 
    [] Quotient.lift₂ ↦ 115 
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters
Termination.lean:832:0
[diag] Diagnostics ▼
  [reduction] unfolded declarations (max: 2725, num: 24): ▶
  [reduction] unfolded instances (max: 5278, num: 55): ▶
  [reduction] unfolded reducible declarations (max: 2883, num: 10): ▶
  [type_class] used instances (max: 237, num: 2): ▶
  [def_eq] heuristic for solving `f a =?= f b` (max: 632, num: 6): ▶
  [kernel] unfolded declarations (max: 185, num: 5): ▼
    [] Quotient.lift ↦ 185 
    [] Add.add ↦ 135 
    [] HAdd.hAdd ↦ 135 
    [] Quotient.liftOn₂ ↦ 115 
    [] Quotient.lift₂ ↦ 115 
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters

Termination.lean:882:31
Tactic state
1 goal
case pos
b s n : Trace
A : Ordinal.{u_1} := ω ^ (mu n.delta + mu s + 6)
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ω ^ (mu n + mu s + 6)
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ω * (mu b + 1) + 2
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
htower_lt : tower < A
hfin : mu b < ω
this✝ : mu b + 1 < ω
hmul : ω * (mu b + 1) < ω * ω
this : ω * (mu b + 1) + 2 < ω * ω + 2
⊢ rest < ω ^ 2
Expected type
b s n : Trace
A : Ordinal.{u_1} := ⋯
h_coeff : ω ^ 2 * (mu (b.recΔ s n) + 1) ≤ ω ^ (mu (b.recΔ s n) + 3)
tower : Ordinal.{u_1} := ⋯
htower : tower = ω ^ (mu n + mu s + 6)
rest : Ordinal.{u_1} := ⋯
hrest : rest = ω * (mu b + 1) + 2
hμ_split : mu (b.recΔ s n) + 1 = tower + rest
htower_lt : tower < A
hfin : mu b < ω
this : mu b + 1 < ω
hmul : ω * (mu b + 1) < ω * ω
⊢ Ordinal.{?u.50852}
Messages (3)
Termination.lean:882:8
failed to synthesize
  AddRightStrictMono Ordinal.{?u.50852}
Termination.lean:832:0
[diag] Diagnostics ▼
  [kernel] unfolded declarations (max: 185, num: 5): ▼
    [] Quotient.lift ↦ 185 
    [] Add.add ↦ 135 
    [] HAdd.hAdd ↦ 135 
    [] Quotient.liftOn₂ ↦ 115 
    [] Quotient.lift₂ ↦ 115 
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters
Termination.lean:832:0
[diag] Diagnostics ▼
  [reduction] unfolded declarations (max: 2725, num: 24): ▶
  [reduction] unfolded instances (max: 5278, num: 55): ▶
  [reduction] unfolded reducible declarations (max: 2883, num: 10): ▶
  [type_class] used instances (max: 237, num: 2): ▶
  [def_eq] heuristic for solving `f a =?= f b` (max: 632, num: 6): ▶
  [kernel] unfolded declarations (max: 185, num: 5): ▼
    [] Quotient.lift ↦ 185 
    [] Add.add ↦ 135 
    [] HAdd.hAdd ↦ 135 
    [] Quotient.liftOn₂ ↦ 115 
    [] Quotient.lift₂ ↦ 115 
use `set_option diagnostics.threshold <num>` to control threshold for reporting counters